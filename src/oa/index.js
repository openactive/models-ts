module.exports = {
  Concept: require('./models/Concept'),
  ConceptScheme: require('./models/ConceptScheme'),
  Schedule: require('./models/Schedule'),
  VirtualLocation: require('./models/VirtualLocation'),
  WebAPI: require('./models/WebAPI'),
  CertificationLevel: require('./models/CertificationLevel'),
  CertificationScheme: require('./models/CertificationScheme'),
  Lease: require('./models/Lease'),
  OpenBookingError: require('./models/OpenBookingError'),
  PartialSchedule: require('./models/PartialSchedule'),
  Payment: require('./models/Payment'),
  TrustCertification: require('./models/TrustCertification'),
  Action: require('./models/Action'),
  CancellationNotPermittedError: require('./models/CancellationNotPermittedError'),
  ConceptCollection: require('./models/ConceptCollection'),
  DynamicPayment: require('./models/DynamicPayment'),
  Event: require('./models/Event'),
  FacilityUse: require('./models/FacilityUse'),
  GoneError: require('./models/GoneError'),
  IncompleteAttendeeDetailsError: require('./models/IncompleteAttendeeDetailsError'),
  IncompleteBrokerDetailsError: require('./models/IncompleteBrokerDetailsError'),
  IncompleteCustomerDetailsError: require('./models/IncompleteCustomerDetailsError'),
  IncompleteIntakeFormError: require('./models/IncompleteIntakeFormError'),
  IncompleteOrderItemError: require('./models/IncompleteOrderItemError'),
  IncompletePaymentDetailsError: require('./models/IncompletePaymentDetailsError'),
  InternalOpenBookingError: require('./models/InternalOpenBookingError'),
  InvalidAPITokenError: require('./models/InvalidAPITokenError'),
  InvalidAuthorizationDetailsError: require('./models/InvalidAuthorizationDetailsError'),
  InvalidIntakeFormError: require('./models/InvalidIntakeFormError'),
  InvalidOpportunityOrOfferIdError: require('./models/InvalidOpportunityOrOfferIdError'),
  InvalidPaymentDetailsError: require('./models/InvalidPaymentDetailsError'),
  MethodNotAllowedError: require('./models/MethodNotAllowedError'),
  MissingPaymentDetailsError: require('./models/MissingPaymentDetailsError'),
  NoAPITokenError: require('./models/NoAPITokenError'),
  NotFoundError: require('./models/NotFoundError'),
  OpportunityCapacityIsReservedByLeaseError: require('./models/OpportunityCapacityIsReservedByLeaseError'),
  OpportunityHasInsufficientCapacityError: require('./models/OpportunityHasInsufficientCapacityError'),
  OpportunityIntractableError: require('./models/OpportunityIntractableError'),
  OpportunityIsFullError: require('./models/OpportunityIsFullError'),
  OpportunityIsInConflictError: require('./models/OpportunityIsInConflictError'),
  OpportunityOfferPairNotBookableError: require('./models/OpportunityOfferPairNotBookableError'),
  OrderAlreadyExistsError: require('./models/OrderAlreadyExistsError'),
  OrderCreationFailedError: require('./models/OrderCreationFailedError'),
  OrderItemIdInvalidError: require('./models/OrderItemIdInvalidError'),
  OrderItemNotWithinOrderError: require('./models/OrderItemNotWithinOrderError'),
  OrderProposalVersionOutdatedError: require('./models/OrderProposalVersionOutdatedError'),
  Organization: require('./models/Organization'),
  PatchContainsExcessivePropertiesError: require('./models/PatchContainsExcessivePropertiesError'),
  PatchNotAllowedOnPropertyError: require('./models/PatchNotAllowedOnPropertyError'),
  Person: require('./models/Person'),
  Place: require('./models/Place'),
  SellerMismatchError: require('./models/SellerMismatchError'),
  SellerNotFoundError: require('./models/SellerNotFoundError'),
  TemporarilyUnableToCreateOrderError: require('./models/TemporarilyUnableToCreateOrderError'),
  TemporarilyUnableToDeleteOrderError: require('./models/TemporarilyUnableToDeleteOrderError'),
  TemporarilyUnableToProduceOrderQuoteError: require('./models/TemporarilyUnableToProduceOrderQuoteError'),
  TemporarilyUnableToUpdateOrderError: require('./models/TemporarilyUnableToUpdateOrderError'),
  TooManyRequestsError: require('./models/TooManyRequestsError'),
  TotalPaymentDueMismatchError: require('./models/TotalPaymentDueMismatchError'),
  UnableToProcessOrderItemError: require('./models/UnableToProcessOrderItemError'),
  UnacceptableOfferError: require('./models/UnacceptableOfferError'),
  UnauthenticatedError: require('./models/UnauthenticatedError'),
  UnexpectedOrderTypeError: require('./models/UnexpectedOrderTypeError'),
  UnknownOfferError: require('./models/UnknownOfferError'),
  UnknownOpportunityError: require('./models/UnknownOpportunityError'),
  UnknownOrIncorrectEndpointError: require('./models/UnknownOrIncorrectEndpointError'),
  UnknownOrderError: require('./models/UnknownOrderError'),
  UnnecessaryPaymentDetailsError: require('./models/UnnecessaryPaymentDetailsError'),
  AuthenticatedPerson: require('./models/AuthenticatedPerson'),
  BookingService: require('./models/BookingService'),
  Brand: require('./models/Brand'),
  Course: require('./models/Course'),
  CourseInstance: require('./models/CourseInstance'),
  DataCatalog: require('./models/DataCatalog'),
  Dataset: require('./models/Dataset'),
  EventSeries: require('./models/EventSeries'),
  HeadlineEvent: require('./models/HeadlineEvent'),
  IndividualFacilityUse: require('./models/IndividualFacilityUse'),
  InternalApplicationError: require('./models/InternalApplicationError'),
  InternalLibraryConfigurationError: require('./models/InternalLibraryConfigurationError'),
  InternalLibraryError: require('./models/InternalLibraryError'),
  MediaObject: require('./models/MediaObject'),
  Offer: require('./models/Offer'),
  OnDemandEvent: require('./models/OnDemandEvent'),
  OpenBookingSimulateAction: require('./models/OpenBookingSimulateAction'),
  Order: require('./models/Order'),
  OrderItem: require('./models/OrderItem'),
  PropertyValueSpecification: require('./models/PropertyValueSpecification'),
  ScheduledSession: require('./models/ScheduledSession'),
  SessionSeries: require('./models/SessionSeries'),
  Slot: require('./models/Slot'),
  Terms: require('./models/Terms'),
  AccessChannelUpdateSimulateAction: require('./models/AccessChannelUpdateSimulateAction'),
  AccessCodeUpdateSimulateAction: require('./models/AccessCodeUpdateSimulateAction'),
  AccessPassUpdateSimulateAction: require('./models/AccessPassUpdateSimulateAction'),
  AudioObject: require('./models/AudioObject'),
  BooleanFormFieldSpecification: require('./models/BooleanFormFieldSpecification'),
  ChangeOfLogisticsLocationSimulateAction: require('./models/ChangeOfLogisticsLocationSimulateAction'),
  ChangeOfLogisticsNameSimulateAction: require('./models/ChangeOfLogisticsNameSimulateAction'),
  ChangeOfLogisticsTimeSimulateAction: require('./models/ChangeOfLogisticsTimeSimulateAction'),
  CustomerNoticeSimulateAction: require('./models/CustomerNoticeSimulateAction'),
  DataDownload: require('./models/DataDownload'),
  DropdownFormFieldSpecification: require('./models/DropdownFormFieldSpecification'),
  GeoCoordinates: require('./models/GeoCoordinates'),
  ImageObject: require('./models/ImageObject'),
  IndicativeOffer: require('./models/IndicativeOffer'),
  OfferOverride: require('./models/OfferOverride'),
  OpeningHoursSpecification: require('./models/OpeningHoursSpecification'),
  OpportunityAttendanceUpdateSimulateAction: require('./models/OpportunityAttendanceUpdateSimulateAction'),
  OrderQuote: require('./models/OrderQuote'),
  ParagraphFormFieldSpecification: require('./models/ParagraphFormFieldSpecification'),
  PriceSpecification: require('./models/PriceSpecification'),
  PrivacyPolicy: require('./models/PrivacyPolicy'),
  PropertyValue: require('./models/PropertyValue'),
  QuantitativeValue: require('./models/QuantitativeValue'),
  ReplacementSimulateAction: require('./models/ReplacementSimulateAction'),
  SellerAcceptOrderProposalSimulateAction: require('./models/SellerAcceptOrderProposalSimulateAction'),
  SellerRejectOrderProposalSimulateAction: require('./models/SellerRejectOrderProposalSimulateAction'),
  SellerRequestedCancellationSimulateAction: require('./models/SellerRequestedCancellationSimulateAction'),
  ShortAnswerFormFieldSpecification: require('./models/ShortAnswerFormFieldSpecification'),
  TermsOfUse: require('./models/TermsOfUse'),
  VideoObject: require('./models/VideoObject'),
  Barcode: require('./models/Barcode'),
  LocationFeatureSpecification: require('./models/LocationFeatureSpecification'),
  OrderProposal: require('./models/OrderProposal'),
  PostalAddress: require('./models/PostalAddress'),
  SellerRequestedCancellationWithMessageSimulateAction: require('./models/SellerRequestedCancellationWithMessageSimulateAction'),
  TaxChargeSpecification: require('./models/TaxChargeSpecification'),
  BabyChanging: require('./models/BabyChanging'),
  Bar: require('./models/Bar'),
  Cafe: require('./models/Cafe'),
  ChangingFacilities: require('./models/ChangingFacilities'),
  Creche: require('./models/Creche'),
  Lockers: require('./models/Lockers'),
  Parking: require('./models/Parking'),
  Showers: require('./models/Showers'),
  Toilets: require('./models/Toilets'),
  Towels: require('./models/Towels'),
  enums: {
    BrokerType: require('./enums/BrokerType'),
    GenderRestrictionType: require('./enums/GenderRestrictionType'),
    OrderCreationStatus: require('./enums/OrderCreationStatus'),
    OrderProposalStatus: require('./enums/OrderProposalStatus'),
    PaymentMethod: require('./enums/PaymentMethod'),
    RequiredStatusType: require('./enums/RequiredStatusType'),
    TaxMode: require('./enums/TaxMode'),
    OpenBookingFlowRequirement: require('./enums/OpenBookingFlowRequirement'),
    OrderItemStatus: require('./enums/OrderItemStatus'),
    AvailableChannelType: require('./enums/AvailableChannelType'),
    FacilitySettingType: require('./enums/FacilitySettingType'),
    BookingChannelType: require('./enums/BookingChannelType'),
    TestOpportunityCriteriaEnumeration: require('./enums/TestOpportunityCriteriaEnumeration'),
    PropertyEnumeration: require('./enums/PropertyEnumeration'),
  },
};